{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/flex-layout/extended\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nfunction AppComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class AppComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.title = 'mex-com';\n    this.styleImage = 'maps';\n    this.form = new FormGroup({\n      // Define tus controles de formulario aquí...\n      // Por ejemplo:\n      username: new FormControl(''),\n      password: new FormControl(''),\n      email: new FormControl('', Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.buildForm();\n  }\n  buildForm() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  login(event) {\n    // Lógica de inicio de sesión...\n  }\n  unsplashClass() {\n    return {\n      'min-height': '100%',\n      'background-color': `url(https://source.unsplash.com/random/1200x900?\"${this.styleImage}\") no-repeat center center`,\n      'background-size': 'cover',\n      position: 'relative'\n    };\n  }\n  checkRequiredError() {\n    return this.form.controls['email'].hasError('required');\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 31,\n  vars: 6,\n  consts: [[\"fxLayout\", \"\", \"fxLayout.xs\", \"column\", \"fxLayoutAlign\", \"center\", \"fxLayoutGap\", \"0\", \"fxLayoutGap.xs\", \"0\", 1, \"container-fluid\", \"mt-5\"], [\"fxFlex\", \"35%\", 1, \"login-card\", \"mat-elevation-z8\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", 1, \"login-content\"], [1, \"login-header\", \"mb-5\", \"mt-3\"], [\"fxLayout\", \"column\", 1, \"login-form\", \"align-items-center\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Type your email\", \"type\", \"email\", \"formControlName\", \"email\"], [\"matPrefix\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Type your password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"type\", \"submit\", 1, \"login-button\", \"mt-3\"], [1, \"mt-3\"], [\"routerLink\", \"/forgot-password\", 1, \"forgot-link\"], [\"fxFlex\", \"45%\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"end start\", 1, \"login-card\", \"mat-elevation-z8\", 3, \"ngStyle\"], [1, \"login-aside-overlay\"], [1, \"login-welcome-text\"], [1, \"login-aside-hr\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"main\", 2)(3, \"span\", 3);\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_5_listener($event) {\n        return ctx.login($event);\n      });\n      i0.ɵɵelementStart(6, \"mat-form-field\", 5)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementStart(10, \"mat-icon\", 7);\n      i0.ɵɵtext(11, \"mail_outline\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, AppComponent_mat_error_12_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵtemplate(13, AppComponent_mat_error_13_Template, 4, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-form-field\", 5)(15, \"mat-label\");\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵelementStart(18, \"mat-icon\", 7);\n      i0.ɵɵtext(19, \"lock_outline\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, AppComponent_mat_error_20_Template, 4, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 10);\n      i0.ɵɵtext(22, \"Ingresar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 11)(24, \"a\", 12);\n      i0.ɵɵtext(25, \"forgot password?\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(26, \"div\", 13);\n      i0.ɵɵelement(27, \"div\", 14);\n      i0.ɵɵelementStart(28, \"h1\", 15);\n      i0.ɵɵtext(29);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"hr\", 16);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.hasError(\"required\") && !ctx.form.controls.email.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.hasError(\"required\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.hasError(\"required\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngStyle\", ctx.unsplashClass());\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.title);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgStyle, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink, i4.DefaultLayoutDirective, i4.DefaultLayoutGapDirective, i4.DefaultLayoutAlignDirective, i4.DefaultFlexDirective, i5.DefaultStyleDirective, i6.MatButton, i7.MatInput, i8.MatFormField, i8.MatLabel, i8.MatError, i8.MatPrefix],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AppComponent","constructor","formBuilder","title","styleImage","form","username","password","email","required","ngOnInit","buildForm","group","minLength","login","event","unsplashClass","position","checkRequiredError","controls","hasError","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵlistener","AppComponent_Template_form_ngSubmit_5_listener","$event","ɵɵelement","ɵɵtemplate","AppComponent_mat_error_12_Template","AppComponent_mat_error_13_Template","AppComponent_mat_error_20_Template","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate"],"sources":["C:\\Users\\ahri1\\mex-com\\src\\app\\app.component.ts","C:\\Users\\ahri1\\mex-com\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mex-com';\n  form: FormGroup;\n  styleImage = 'maps';\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = new FormGroup({\n      // Define tus controles de formulario aquí...\n      // Por ejemplo:\n      username: new FormControl(''),\n      password: new FormControl(''),\n      email: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  private buildForm(): any {\n    this.form = this.formBuilder.group({email:['',[Validators.required, Validators.email]],password:['',[Validators.required,Validators.minLength(6)]]});\n  }\n\n  login(event: any) {\n    // Lógica de inicio de sesión...\n  }\n\n  unsplashClass() {\n    return {\n      'min-height': '100%',\n      'background-color': `url(https://source.unsplash.com/random/1200x900?\"${this.styleImage}\") no-repeat center center`,\n      'background-size': 'cover',\n      position: 'relative'\n    };\n  }\n\n  checkRequiredError(): boolean {\n    return this.form.controls['email'].hasError('required');\n  }\n}\n","<div class=\"container-fluid mt-5\"\n  fxLayout\n  fxLayout.xs=\"column\"\n  fxLayoutAlign=\"center\"\n  fxLayoutGap=\"0\"\n  fxLayoutGap.xs=\"0\">\n  <div class=\"login-card mat-elevation-z8\" fxFlex=\"35%\">\n    <main class=\"login-content\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <span class=\"login-header mb-5 mt-3\">Login</span>\n      <!-- login form -->\n      <form [formGroup]=\"form\" class=\"login-form align-items-center\" fxLayout=\"column\" (ngSubmit)=\"login($event)\">\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\n          <mat-label>Email</mat-label>\n          <input matInput placeholder=\"Type your email\" type=\"email\" formControlName='email'>\n          <mat-icon matPrefix>mail_outline</mat-icon>\n          <mat-error *ngIf=\"this.form.controls.email.hasError('required') && !this.form.controls.email.hasError('required')\">\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"this.form.controls.email.hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\n          <mat-label>Password</mat-label>\n          <input matInput placeholder=\"Type your password\" type=\"password\" formControlName='password'>\n          <mat-icon matPrefix>lock_outline</mat-icon>\n          <mat-error *ngIf=\"this.form.controls.email.hasError('required')\">\n            Password is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n        <button mat-raised-button color=\"warn\" type=\"submit\" class=\"login-button mt-3\">Ingresar</button>\n      </form>\n      <div class=\"mt-3\">\n        <a class=\"forgot-link\" routerLink=\"/forgot-password\">forgot password?</a>\n      </div>\n    </main>\n  </div>\n  <div class=\"login-card mat-elevation-z8\" fxFlex=45% fxLayout=\"column\" fxLayoutAlign=\"end start\" [ngStyle]=\"unsplashClass()\">\n    <div class=\"login-aside-overlay\"></div>\n    <h1 class=\"login-welcome-text\">{{title}}</h1>\n    <hr class=\"login-aside-hr\">\n  </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}