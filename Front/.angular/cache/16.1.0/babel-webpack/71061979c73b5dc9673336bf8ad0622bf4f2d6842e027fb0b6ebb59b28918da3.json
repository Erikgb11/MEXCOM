{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/flex-layout/flex\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/icon\";\nfunction RegistroComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistroComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistroComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class RegistroComponent {}\nRegistroComponent.ɵfac = function RegistroComponent_Factory(t) {\n  return new (t || RegistroComponent)();\n};\nRegistroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistroComponent,\n  selectors: [[\"app-registro\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[\"fxLayout\", \"column\", 1, \"login-form\", \"align-items-center\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Type your email\", \"type\", \"email\", \"formControlName\", \"email\"], [\"matPrefix\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Type your password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"type\", \"submit\", 1, \"login-button\", \"mt-3\"]],\n  template: function RegistroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistroComponent_Template_form_ngSubmit_0_listener($event) {\n        return ctx.login($event);\n      });\n      i0.ɵɵelementStart(1, \"mat-form-field\", 1)(2, \"mat-label\");\n      i0.ɵɵtext(3, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"mat-icon\", 3);\n      i0.ɵɵtext(6, \"mail_outline\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, RegistroComponent_mat_error_7_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵtemplate(8, RegistroComponent_mat_error_8_Template, 4, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\", 1)(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵelementStart(13, \"mat-icon\", 3);\n      i0.ɵɵtext(14, \"lock_outline\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, RegistroComponent_mat_error_15_Template, 4, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"button\", 6);\n      i0.ɵɵtext(17, \"Registrarte\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkRequiredError() && !ctx.checkRequiredError());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkRequiredError());\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkRequiredError());\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.DefaultLayoutDirective, i4.MatButton, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatPrefix, i7.MatIcon],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegistroComponent","selectors","decls","vars","consts","template","RegistroComponent_Template","rf","ctx","ɵɵlistener","RegistroComponent_Template_form_ngSubmit_0_listener","$event","login","ɵɵelement","ɵɵtemplate","RegistroComponent_mat_error_7_Template","RegistroComponent_mat_error_8_Template","RegistroComponent_mat_error_15_Template","ɵɵproperty","form","ɵɵadvance","checkRequiredError"],"sources":["C:\\Users\\ahri1\\mex-com\\src\\app\\registro\\registro.component.ts","C:\\Users\\ahri1\\mex-com\\src\\app\\registro\\registro.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.scss']\n})\nexport class RegistroComponent {\n\n}\n","<form [formGroup]=\"form\" class=\"login-form align-items-center\" fxLayout=\"column\" (ngSubmit)=\"login($event)\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Email</mat-label>\n      <input matInput placeholder=\"Type your email\" type=\"email\" formControlName='email'>\n      <mat-icon matPrefix>mail_outline</mat-icon>\n      <mat-error *ngIf=\"checkRequiredError() && !checkRequiredError()\">\n        Please enter a valid email address\n      </mat-error>\n      <mat-error *ngIf=\"checkRequiredError()\">\n        Email is <strong>required</strong>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Password</mat-label>\n      <input matInput placeholder=\"Type your password\" type=\"password\" formControlName='password'>\n      <mat-icon matPrefix>lock_outline</mat-icon>\n      <mat-error *ngIf=\"checkRequiredError()\">\n        Password is <strong>required</strong>\n      </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"warn\" type=\"submit\" class=\"login-button mt-3\">Registrarte</button>\n  </form>"],"mappings":";;;;;;;;;;ICKMA,EAAA,CAAAC,cAAA,gBAAiE;IAC/DD,EAAA,CAAAE,MAAA,2CACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACZH,EAAA,CAAAC,cAAA,gBAAwC;IACtCD,EAAA,CAAAE,MAAA,iBAAS;IAAAF,EAAA,CAAAC,cAAA,aAAQ;IAAAD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;IAOpCH,EAAA,CAAAC,cAAA,gBAAwC;IACtCD,EAAA,CAAAE,MAAA,oBAAY;IAAAF,EAAA,CAAAC,cAAA,aAAQ;IAAAD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;ADV7C,OAAM,MAAOC,iBAAiB;AAAjBA,iBAAiB,C;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB,C;QAAjBA,iBAAiB;EAAAC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP9BX,EAAA,CAAAC,cAAA,cAA4G;MAA3BD,EAAA,CAAAa,UAAA,sBAAAC,oDAAAC,MAAA;QAAA,OAAYH,GAAA,CAAAI,KAAA,CAAAD,MAAA,CAAa;MAAA,EAAC;MACvGf,EAAA,CAAAC,cAAA,wBAAwD;MAC3CD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAC5BH,EAAA,CAAAiB,SAAA,eAAmF;MACnFjB,EAAA,CAAAC,cAAA,kBAAoB;MAAAD,EAAA,CAAAE,MAAA,mBAAY;MAAAF,EAAA,CAAAG,YAAA,EAAW;MAC3CH,EAAA,CAAAkB,UAAA,IAAAC,sCAAA,uBAEY;MACZnB,EAAA,CAAAkB,UAAA,IAAAE,sCAAA,uBAEY;MACdpB,EAAA,CAAAG,YAAA,EAAiB;MACjBH,EAAA,CAAAC,cAAA,wBAAwD;MAC3CD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAC/BH,EAAA,CAAAiB,SAAA,gBAA4F;MAC5FjB,EAAA,CAAAC,cAAA,mBAAoB;MAAAD,EAAA,CAAAE,MAAA,oBAAY;MAAAF,EAAA,CAAAG,YAAA,EAAW;MAC3CH,EAAA,CAAAkB,UAAA,KAAAG,uCAAA,uBAEY;MACdrB,EAAA,CAAAG,YAAA,EAAiB;MACjBH,EAAA,CAAAC,cAAA,iBAA+E;MAAAD,EAAA,CAAAE,MAAA,mBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MApBjGH,EAAA,CAAAsB,UAAA,cAAAV,GAAA,CAAAW,IAAA,CAAkB;MAKNvB,EAAA,CAAAwB,SAAA,GAAmD;MAAnDxB,EAAA,CAAAsB,UAAA,SAAAV,GAAA,CAAAa,kBAAA,OAAAb,GAAA,CAAAa,kBAAA,GAAmD;MAGnDzB,EAAA,CAAAwB,SAAA,GAA0B;MAA1BxB,EAAA,CAAAsB,UAAA,SAAAV,GAAA,CAAAa,kBAAA,GAA0B;MAQ1BzB,EAAA,CAAAwB,SAAA,GAA0B;MAA1BxB,EAAA,CAAAsB,UAAA,SAAAV,GAAA,CAAAa,kBAAA,GAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}